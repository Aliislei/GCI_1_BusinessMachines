# GCI最終課題 - 機械学習による事業提案 Cursorルール

## プロジェクト概要
- **役割**: ITコンサルティング会社の新人アソシエイト
- **クライアント**: 大手ITコンサル企業I社
- **案件**: データ分析PoC（概念実証）
- **データセット**: IBM HR Analytics Employee Attrition & Performance（約1500人の従業員人事データ）
- **最終成果物**: 事業提案プレゼンテーション資料（PDF、20スライド以内）
- **締切**: 2025/7/29(火) 17:00 (JST)

## 必須要件（全8項目 - 評価項目）
1. **事業提案**: 技術説明だけでなく、データから示唆を得て事業提案を行う
2. **EDA（探索的データ分析）**: I社固有の課題を探索的データ分析で示す
3. **機械学習モデル**: モデル名+評価指標名+スコアを報告し、定量的示唆を示す
4. **市場分析**: 外部データ・論文等を引用し、出典を必ず明記する
5. **説明性**: 機械学習の事前知識がない役員でも理解できる内容
6. **可視化**: 元データの分布を複数可視化し、図表にナンバリング
7. **全体分析**: 提供データ全体を分析して意思決定
8. **論理性**: 分析から事業提案まで一貫した論理性

## 提出物
1. **スライド**: PDF形式（20スライド以内、10MB以下）
2. **市場分析出典**: 参考・引用URL/文献リスト
3. **Notebook**: .ipynb/.py/.zip形式

## 技術要件
- **目的変数**: EDAと市場分析を通じて自由に設定
- **モデル評価**: 適切な評価指標でベースラインとの比較も実施
- **特徴量エンジニアリング**: クライアント企業の課題に適合
- **複数モデル比較**: 各モデルの仕組み・理論背景・長所短所を説明

## 分析フロー
1. **市場分析**: 外部データ・論文参照 → 考察
2. **EDA**: 可視化 → 考察
3. **問題設定**: クライアント固有課題の特定
4. **特徴量エンジニアリング**: 予測精度向上への取り組み
5. **実験結果**: モデル選定・評価 → 可視化 → 考察
6. **事業提案**: 事業案提示 → 導入規模・効果の定量評価

## 引用・倫理ルール
- **出典明記**: 全ての外部データ・手法・図表・文章に出典を記載
- **引用分量**: プレゼン全体の40%以下に留める
- **引用形式**: 
  - Web: 著者名. "タイトル". サイト名. 年, URL, (参照日)
  - 文献: 著者名. 書名. 版, 出版者, 年, ページ

## データ内容
- **基本情報**: 大手ITコンサル企業I社の人事データ（離職状況含む）
- **主要カラム**: 教育レベル、職場満足度、ワークライフバランス、ストレス評価、福利厚生利用、パフォーマンス指標等
- **制約**: 一部カラムの詳細説明は未開示（実務上の制約として受け入れる）

## 可視化・説明ルール
- **目的意識**: 配色・凡例・単位・フォント等に明確な理由
- **ナンバリング**: 自作図表には必ずナンバリング
- **説明性**: 専門用語は非エンジニア向けに説明
- **概念図**: 技術内容を視覚的に説明

## 成功基準
- **問題設定**: 的を射たI社固有の課題特定
- **事業提案**: 実現性があり論理的必然性のある提案
- **定量評価**: データサイエンスによる事業規模・効果の定量評価
- **斬新性**: 新規性・創意工夫があれば高評価

## 注意事項
- モデル名+評価指標+スコアは必ずスライド本文に明記（図表のみは不可）
- 最後に提出されたもののみが評価対象
- ファイル名: [omnicampusアカウント名].pdf
- 技術者倫理の厳守（剽窃は厳禁） 

#　仮装環境
- 本プロジェクトではuvによる仮装環境を利用します。
- ターミナルコマンド実行前に必ずuv syncおよび仮装環境のアクティベートを実行してください。
- 仮装環境のアクティベートは以下のコマンドを実行してください。
  - uv.venv/bin/activate

#　uv利用について
- ライブラリのインストールではuv addを利用してください。
- ライブラリのアップデートではuv updateを利用してください。
- ライブラリの削除ではuv removeを利用してください。
- ライブラリの一覧表示ではuv listを利用してください。
- コマンドの実行時はuv runを利用してください。
- Pythonの実行時もuv run pythonを利用してください。

#　日付時刻の取得について
- 現在日時の情報が必要になった時はdateコマンドを利用してください

## ワークスペース構造
```
GCI_1_BusinessMachines-1/
├── .cursorrules              # プロジェクト固有のCursorルール
├── .python-version           # Python バージョン指定
├── .venv/                    # uv 仮想環境
├── pyproject.toml            # プロジェクト設定とuv依存関係管理
├── main.py                   # メインPythonファイル
├── README.md                 # プロジェクト概要
├── data/
│   └── data.csv              # I社人事データ（約1500人、257KB）
├── src/                      # ソースコード
└── doc/                      # ドキュメント管理
    ├── gci/                  # GCI課題関連資料
    │   ├── gcirule.md        # 課題詳細ルール（25KB）
    │   └── GCI最終課題 README 2025Summer 必須課題 (1).docx
    ├── fleeting/             # 一時的なメモ・アイデア
    ├── permanaent/           # 永続的な知識・学習ノート
    └── literature/           # 文献・参考資料管理
```

### ディレクトリ説明
- **data/**: I社提供の人事データ（分析対象データセット）
- **src/**: 分析用ソースコード（Jupyter Notebook等）
- **doc/gci/**: GCI課題の詳細ルールと関連資料
- **doc/literature/**: 市場分析用の外部文献・論文保管
- **doc/fleeting/**: 分析過程での一時的なメモ・仮説
- **doc/permanaent/**: 確定した知見・学習内容の記録

#　データセットについて
- データセットはdata/data.csvに格納されています。
- データセットの説明はdoc/gci/gcirule.mdに記載されています。
- 通貨単位はドルです。
- 外資系国際企業であるため、日本のデータとは限りません
- 実パフォーマンスを指すのはPerformance Indexです。
- パフォーマンス評価を指すのはPerformance Ratingです。
- パフォーマンス評価は1から5の5段階評価です。
- パフォーマンス評価はマネージャーによって評価されます。

# 可視化について
- グラフ描画時は必ずjapanize_matplotlibをimportすること

#　ソースコード生成フォルダ
- ソースコードはユーザーからの指示がない限りsrc/tmp/に生成すること。

#　再現性
- 本対応では再現性が求められるため、ソースコードには必ずランダムシードを設定すること。
- ランダムシードは511に設定すること。

#　提案資料作成
- 提案資料およびそこで利用する図表はdoc/output/に生成すること。
- 提案資料はmarp形式のマークダウンファイルで作成する。
- 提案資料作成のための資料等はdoc/teianにユーザーが保存する。このフォルダの情報を参考にすること。
- 提案資料ファイル名はdoc/output/HironoriOtsubo.mdとする。

